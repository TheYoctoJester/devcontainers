#name: build base container
#
#on: [push]
#
#env:
#  C_SOURCE: devcontainer-base-yoep
#
#jobs:
#
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Extract branch name
#      shell: bash
#      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#      id: extract_branch
#
# This uses bash variable expansion magic to do the lowercase: https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
#    - name: container name generation
#      run: |
#        echo "C_NAME=ghcr.io/${GITHUB_ACTOR,,}/${C_SOURCE}:${{ steps.extract_branch.outputs.branch }}" >>${GITHUB_ENV}
#
#    - name: Set up Docker Buildx
#      id: buildx
#      uses: docker/setup-buildx-action@v1
#
#    - name: Build
#      id: docker_build
#      uses: docker/build-push-action@v2
#      with:
#        context: ./
#        file: ./YOEP/Dockerfile.base
#        push: false
#        tags: ${C_NAME}
#
#    - name: Push
#      shell: bash
#      run: docker push ${C_NAME}
#      id: docker_push
#
#    - name: Image digest
#      run: echo ${{ steps.docker_build.outputs.digest }}

name: build base container

on:
  [push]
#  push:
#    branches: ['release']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: devcontainer-base-yoep
#  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./
          file: ./YOEP/Dockerfile.base
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}